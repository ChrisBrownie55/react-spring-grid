{"version":3,"file":"index.umd.js","sources":["../components/Item.tsx","../components/Grid.tsx"],"sourcesContent":["import React from 'react'\nimport { useSpring, useTransition } from 'react-spring'\nimport { ObjectOf, UnwrapArray } from '../generics'\n\ntype style = UnwrapArray<ReturnType<typeof useTransition>>['props']\n\nexport interface RendererProps extends ObjectOf<any> {\n  data: any\n  style: style\n}\n\nexport interface Props<T> {\n  renderer: React.ComponentType<RendererProps>\n  data: T\n  x: number\n  y: number\n  style: style\n}\n\nexport function Item<T>({ renderer: Renderer, data, style, x, y }: Props<T>) {\n  const position = useSpring({\n    left: `${x}px`,\n    top: `${y}px`\n  })\n\n  return <Renderer data={data} style={{ ...style, ...position }} />\n}\n","import React, { useRef } from 'react'\nimport { useTransition } from 'react-spring'\nimport useMeasure from 'use-measure'\n\nimport { Item } from './Item'\nimport { ObjectOf, Component } from '../generics'\n\ntype useTransitionParams = Parameters<typeof useTransition>\n\nexport interface Props<T> extends ObjectOf<any> {\n  items: T | T[]\n  keys: useTransitionParams[1]\n  renderer: Parameters<typeof Item>[0]['renderer']\n  wrapper: Component\n}\n\nexport function Grid<T>({\n  items,\n  keys,\n  renderer: ItemRenderer,\n  wrapper: Component = 'section',\n  style,\n  ...props\n}: Props<T>) {\n  const transition = useTransition<T, React.CSSProperties>(items, keys, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 }\n  })\n\n  const containerRef = useRef(null)\n  const { width: containerWidth } = useMeasure(containerRef)\n\n  let x = 0\n  let y = 0\n\n  return (\n    <Component\n      ref={containerRef}\n      style={{ ...style, position: 'relative' }}\n      {...props}\n    >\n      {transition.map(({ item, key, props }) => (\n        <Item<T>\n          key={key}\n          renderer={ItemRenderer}\n          data={item}\n          style={props}\n          x={x}\n          y={y}\n        />\n      ))}\n    </Component>\n  )\n}\n"],"names":["Item","ref","position","useSpring","left","top","react","Renderer","data","style","Object","transition","useTransition","items","keys","from","opacity","enter","leave","containerRef","useRef","useMeasure","Component","props","map","key","renderer","ItemRenderer","x","y"],"mappings":"4UAmBgBA,EAAQC,uCAChBC,EAAWC,YAAU,CACzBC,cACAC,sBAGKC,MAACC,GAASC,KAAMA,EAAMC,MAAOC,iBAAKD,oECTnBR,kEAID,sMAIfU,EAAaC,gBAAsCC,EAAOC,EAAM,CACpEC,KAAM,CAAEC,QAAS,GACjBC,MAAO,CAAED,QAAS,GAClBE,MAAO,CAAEF,QAAS,KAGdG,EAAeC,SAAO,aACMC,EAAWF,GAM3Cb,MAACgB,oBACCrB,IAAKkB,EACLV,MAAOC,iBAAKD,GAAOP,SAAU,cACzBqB,GAEHZ,EAAWa,aAAKvB,UACfK,MAACN,GACCyB,UACAC,SAAUC,EACVnB,YACAC,cACAmB,EAfA,EAgBAC,EAfA"}